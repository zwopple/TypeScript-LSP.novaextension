{
  "identifier": "com.zwopple.typescript-lsp",
  "name": "TypeScript-LSP",
  "organization": "Zwopple Limited",
  "description": "A TypeScript LSP extension for Nova code editor.",
  "version": "1.0",
  
  "categories": [
    "completions",
    "formatters",
    "issues",
    "languages",
    "sidebars"
  ],
  
  "license": "MIT",
  "repository": "https://github.com/zwopple/TypeScript-LSP.novaextension",
  "bugs": "https://github.com/zwopple/TypeScript-LSP.novaextension/issues",
  
  "main": "main.js",
  "min_runtime": "10.0",
  
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:tsx",
    "onLanguage:javascript",
    "onLanguage:jsx",
    "onWorkspaceContains:tsconfig.json"
  ],
  
  "entitlements": {
    "process": true,
    "filesystem": "readonly"
  },
  
  "config": [
    {
      "title": "Config",
      "type": "section",
      "children": [
        {
          "key": "com.zwopple.typescript-lsp.path",
          "title": "Path",
          "description": "(optional) Path to custom `typescript-language-server` executable.",
          "type": "string",
        },
        {
          "key": "com.zwopple.typescript-lsp.config.isEnabledOnJavaScript",
          "title": "Use with JavaScript",
          "type": "boolean",
          "default": true
        },
        {
          "key": "com.zwopple.typescript-lsp.config.organizeImportsOnSave",
          "title": "Organize imports on save",
          "type": "boolean",
          "default": false
        },
        {
          "key": "com.zwopple.typescript-lsp.config.formatOnSave",
          "title": "Format on save",
          "type": "boolean",
          "default": false
        }
      ]
    },
    {
      "title": "Language Server",
      "type": "section",
      "children": [
        {
          "key": "com.zwopple.typescript-lsp.languageServer.disableSuggestions",
          "title": "Disable Suggestions",
          "type": "boolean",
          "default": false
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.quotePreference",
          "title": "Quote Preference",
          "type": "enum",
          "values": [
            ["auto", "Automatic"],
            ["double", "Double (\")"],
            ["single", "Single (')"]
          ],
          "default": "auto"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includeCompletionsForModuleExports",
          "title": "Include completions for module exports",
          "description": "If enabled, TypeScript will search through all external modules' exports and add them to the completions list. This affects lone identifier completions but not completions on the right hand side of `obj.`.",
          "type": "boolean",
          "default": false
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includeCompletionsForImportStatements",
          "title": "Include completions for import statements",
          "description": "Enables auto-import-style completions on partially-typed import statements. E.g., allows `import write|` to be completed to `import { writeFile } from \"fs\"`.",
          "type": "boolean",
          "default": true
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includeCompletionsWithSnippetText",
          "title": "Include completions for import statements",
          "description": "Allows completions to be formatted with snippet text, indicated by `CompletionItem[\"isSnippet\"]`.",
          "type": "boolean",
          "default": true
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includeCompletionsWithInsertText",
          "title": "Include completions for import statements",
          "description": "If enabled, the completion list will include completions with invalid identifier names. For those entries, The `insertText` and `replacementSpan` properties will be set to change from `.x` property access to `[\"x\"]`.",
          "type": "boolean",
          "default": true
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includeAutomaticOptionalChainCompletions",
          "title": "Include completions for import statements",
          "description": "Unless this option is `false`, or `includeCompletionsWithInsertText` is not enabled, member completion lists triggered with `.` will include entries on potentially-null and potentially-undefined values, with insertion text to replace preceding `.` tokens with `?.`",
          "type": "boolean",
          "default": true
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.importModuleSpecifierPreference",
          "title": "Import module specifier",
          "description": "Preferred path ending for auto imports.",
          "type": "enum",
          "values": [
            ["shortest", "Shortest"],
            ["project-relative", "Project-relative"],
            ["relative", "Relative"],
            ["non-relative", "Non-relative"]
          ],
          "default": "shortest"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.importModuleSpecifierEnding",
          "title": "Import module specifier",
          "description": "Determines whether we import `foo/index.ts` as \"foo\", \"foo/index\", or \"foo/index.js\"",
          "type": "enum",
          "values": [
            ["auto", "Automatic"],
            ["minimal", "Minimal"],
            ["index", "Index"],
            ["js", ".js"]
          ],
          "default": "auto"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.lazyConfiguredProjectsFromExternalProject",
          "title": "Lazy configured projects from external projects",
          "type": "boolean"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.providePrefixAndSuffixTextForRename",
          "title": "Provide prefix and suffix text for rename",
          "type": "boolean"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.provideRefactorNotApplicableReason",
          "title": "Provide refactor not applicable reason",
          "type": "boolean"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.allowRenameOfImportPath",
          "title": "Allow rename of import path",
          "type": "boolean"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.includePackageJsonAutoImports",
          "title": "Allow rename of import path",
          "type": "enum",
          "values": [
            ["auto", "Automatic"],
            ["on", "On"],
            ["off", "Off"]
          ],
          "default": "auto"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.displayPartsForJSDoc",
          "title": "Display parts for JSDoc",
          "type": "boolean"
        },
        {
          "key": "com.zwopple.typescript-lsp.languageServer.generateReturnInDocTemplate",
          "title": "Generate return in documentation templates",
          "type": "boolean"
        }
      ]
    }
  ]
}
